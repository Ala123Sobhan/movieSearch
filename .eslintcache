[{"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearch.js":"1","C:\\Users\\ala12\\movie-search-app\\src\\index.js":"2","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Home.js":"3","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Topratedmovies.js":"4","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Tvsearch.js":"5","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watchlist.js":"6","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Popularmovies.js":"7","C:\\Users\\ala12\\movie-search-app\\src\\pages\\PageInfo.js":"8","C:\\Users\\ala12\\movie-search-app\\src\\App.js":"9","C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearching.js":"10"},{"size":2715,"mtime":1607128940498,"results":"11","hashOfConfig":"12"},{"size":735,"mtime":1606877274104,"results":"13","hashOfConfig":"12"},{"size":842,"mtime":1607390213223,"results":"14","hashOfConfig":"12"},{"size":1514,"mtime":1607390213230,"results":"15","hashOfConfig":"12"},{"size":4568,"mtime":1607034462557,"results":"16","hashOfConfig":"12"},{"size":2325,"mtime":1607390213235,"results":"17","hashOfConfig":"12"},{"size":1548,"mtime":1607390213228,"results":"18","hashOfConfig":"12"},{"size":1060,"mtime":1607124680923,"results":"19","hashOfConfig":"12"},{"size":2853,"mtime":1607373726148,"results":"20","hashOfConfig":"12"},{"size":5649,"mtime":1607372503567,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uj6d8v",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearch.js",[],["45","46"],"C:\\Users\\ala12\\movie-search-app\\src\\index.js",[],["47","48"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Home.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Topratedmovies.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Tvsearch.js",["49"],"import React, { useState, useEffect} from 'react'\r\nimport TvRows from \"./TvRows\"\r\nimport \"../App.css\"\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction TVSearch() {\r\n    const [rows, setRows] = useState([])\r\n    const [inputVal, setInput] = useState('');\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () =>\r\n    {\r\n        setShow(false);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n\r\n    const {\r\n        transcript,\r\n        interimTranscript,\r\n        finalTranscript,\r\n        resetTranscript,\r\n        listening,\r\n    } = useSpeechRecognition();\r\n\r\n    useEffect(() => {\r\n        if (finalTranscript !== ''){\r\n            console.log('Got Final Result: ', finalTranscript);\r\n        }\r\n    }, [interimTranscript, finalTranscript])\r\n\r\n    if (!SpeechRecognition.browserSupportsSpeecgRecognition()) {\r\n        alert(\"Voice Recognition is not compatible with the browser\")\r\n        console.log(\"Your browser does not support speed recognition software! Try Chrome desktop, maybe?\");\r\n    }\r\n\r\n    const listenContinously = () => {\r\n        SpeechRecognition.startListening({\r\n            continious: true,\r\n            language: \"en-GB\",\r\n        });\r\n        resetDone()\r\n        handleShow()\r\n    };\r\n\r\n    const listeningDone = () => {\r\n        handleClose()\r\n        SpeechRecognition.stopListening()\r\n        setInput(transcript)\r\n        renderTvshowInfo(transcript)\r\n    }\r\n\r\n    const resetDone = () => {\r\n        setInput('')\r\n        resetTranscript()\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setInput(event.target.value)\r\n        const searchTerm = event.target.value\r\n        renderTvshowInfo(searchTerm)\r\n    }\r\n\r\n    const renderTvshowInfo= async(searchTerm)=>{\r\n        try{\r\n           //for tv\r\n            let url = \"https://api.themoviedb.org/3/search/tv?api_key=5958134e04ed9ecbbf6100cd3a582d3d&query=\"+searchTerm\r\n            \r\n            let response = await fetch(url)\r\n            const data = await response.json()\r\n            const results = data.results;\r\n           //console.log(results)\r\n\r\n            var movieRows =[]\r\n            results.forEach((tv) =>\r\n            {\r\n                \r\n                tv.poster_path = \"https://image.tmdb.org/t/p/w185\"+ tv.poster_path\r\n                //const movieRow = this.getMovieRows(movie)\r\n                \r\n               // const movieRow = <TvRow key={tv.id} tv={tv}/>\r\n                const movieRow = <TvRows key={tv.id} tv={tv}/>\r\n                //console.log(movieRow)\r\n                movieRows.push(movieRow)\r\n            })\r\n            setRows(movieRows)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"tvSearch-container\">\r\n                    <h1 style={{fontFamily:\"Montserrat\", fontWeight:\"bold\"}}> TV Search </h1>\r\n                <div className=\"searchBar-container\">\r\n                <input className=\"input\" value={inputVal}\r\n                style={{\r\n                    fontSize: 24,\r\n                    display: \"block\",\r\n                    width: \"75%\",\r\n                    paddingTop: 8,\r\n                    paddingBottom: 8,\r\n                    paddingRight: 20,\r\n                    marginRight: 10\r\n                }}\r\n                onChange={handleChange}\r\n                placeholder=\"Enter a TV show....\" />\r\n                <button className=\"voicebutton\" type=\"button\" onClick={resetDone}>Reset</button>\r\n                <button className=\"voicebutton\" type=\"button\" onClick={listenContinously}>Listen</button>\r\n                <button className=\"voicebutton\" type=\"button\" onClick={listeningDone}>Stop</button>\r\n                </div>\r\n                <div> {rows}</div>\r\n                <Modal className=\"modal-container\" aria-labelledby=\"contained-modal-title-vcenter\"\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        >\r\n        <div>\r\n        <Modal.Title className=\"modalbody-textHolder\">Listening...</Modal.Title>\r\n        <Modal.Body className=\"modal-body\">\r\n        <span className=\"text-transcript\">{transcript}</span>\r\n        </Modal.Body>\r\n        </div>\r\n        <Modal.Footer>\r\n            <Button style={{float:\"right\"}} variant=\"secondary\" onClick={listeningDone}>\r\n            Close\r\n            </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default TVSearch\r\n","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watchlist.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Popularmovies.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\PageInfo.js",["50","51"],"C:\\Users\\ala12\\movie-search-app\\src\\App.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearching.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":25,"column":9,"nodeType":"62","messageId":"63","endLine":25,"endColumn":18},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":19},{"ruleId":"60","severity":1,"message":"65","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"66","line":7,"column":17,"nodeType":"62","messageId":"63","endLine":7,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":35,"column":3,"nodeType":"62","messageId":"63","endLine":35,"endColumn":12},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-unused-vars","'listening' is assigned a value but never used.","Identifier","unusedVar","'MovieSearch' is defined but never used.","'Tvsearch' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]