[{"C:\\Users\\ala12\\movie-search-app\\src\\reportWebVitals.js":"1","C:\\Users\\ala12\\movie-search-app\\src\\App.js":"2","C:\\Users\\ala12\\movie-search-app\\src\\index.js":"3","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Topratedmovies.js":"4","C:\\Users\\ala12\\movie-search-app\\src\\pages\\PageInfo.js":"5","C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearch.js":"6","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Tvsearch.js":"7","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Popularmovies.js":"8","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Home.js":"9","C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieRow.js":"10","C:\\Users\\ala12\\movie-search-app\\src\\pages\\RemovieRow.js":"11","C:\\Users\\ala12\\movie-search-app\\src\\pages\\recommendation.js":"12","C:\\Users\\ala12\\movie-search-app\\src\\pages\\NewPageforRe.js":"13","C:\\Users\\ala12\\movie-search-app\\src\\pages\\TvRow.js":"14","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watchlist.js":"15","C:\\Users\\ala12\\movie-search-app\\src\\context\\AppReducer.js":"16","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watched.js":"17","C:\\Users\\ala12\\movie-search-app\\src\\pages\\TvRows.js":"18","C:\\Users\\ala12\\movie-search-app\\src\\context\\GlobalState.js":"19","C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieRows.js":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2934,"mtime":1606700507465,"results":"23","hashOfConfig":"22"},{"size":711,"mtime":1606700599758,"results":"24","hashOfConfig":"22"},{"size":1485,"mtime":1606706585188,"results":"25","hashOfConfig":"22"},{"size":930,"mtime":1606697541348,"results":"26","hashOfConfig":"22"},{"size":2803,"mtime":1606706151585,"results":"27","hashOfConfig":"22"},{"size":2336,"mtime":1606696882524,"results":"28","hashOfConfig":"22"},{"size":1539,"mtime":1606706575894,"results":"29","hashOfConfig":"22"},{"size":1359,"mtime":1606684986853,"results":"30","hashOfConfig":"22"},{"size":4965,"mtime":1606701378805,"results":"31","hashOfConfig":"22"},{"size":696,"mtime":1606259437984,"results":"32","hashOfConfig":"22"},{"size":1083,"mtime":1606314859553,"results":"33","hashOfConfig":"22"},{"size":1214,"mtime":1606315805985,"results":"34","hashOfConfig":"22"},{"size":4909,"mtime":1606697570962,"results":"35","hashOfConfig":"22"},{"size":909,"mtime":1606706481300,"results":"36","hashOfConfig":"22"},{"size":272,"mtime":1606700332824,"results":"37","hashOfConfig":"22"},{"size":154,"mtime":1606663092219,"results":"38","hashOfConfig":"22"},{"size":3575,"mtime":1606706531642,"results":"39","hashOfConfig":"22"},{"size":1004,"mtime":1606701711534,"results":"40","hashOfConfig":"22"},{"size":3950,"mtime":1606706367956,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uj6d8v",{"filePath":"44","messages":"45","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"C:\\Users\\ala12\\movie-search-app\\src\\reportWebVitals.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\App.js",["91"],"C:\\Users\\ala12\\movie-search-app\\src\\index.js",[],["92","93"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Topratedmovies.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\PageInfo.js",["94"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieSearch.js",["95"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Tvsearch.js",["96"],"import React, { Component } from 'react'\r\nimport TvRow from \"./TvRow\"\r\nimport TvRows from \"./TvRows\"\r\nimport \"../App.css\"\r\nexport class Tvsearch extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state ={\r\n            rows:[]\r\n        }\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        const searchTerm = event.target.value\r\n        this.renderTvshowInfo(searchTerm)\r\n    }\r\n    renderTvshowInfo= async(searchTerm)=>{\r\n        try{\r\n\r\n           //for tv\r\n           let url = \"https://api.themoviedb.org/3/search/tv?api_key=5958134e04ed9ecbbf6100cd3a582d3d&query=\"+searchTerm\r\n            \r\n            let response = await fetch(url)\r\n            const data = await response.json()\r\n            const results = data.results;\r\n           //console.log(results)\r\n\r\n\r\n            var movieRows =[]\r\n            results.forEach((tv) =>\r\n            {\r\n                \r\n                tv.poster_path = \"https://image.tmdb.org/t/p/w185\"+ tv.poster_path\r\n                //const movieRow = this.getMovieRows(movie)\r\n                \r\n               // const movieRow = <TvRow key={tv.id} tv={tv}/>\r\n                const movieRow = <TvRows key={tv.id} tv={tv}/>\r\n                //console.log(movieRow)\r\n                movieRows.push(movieRow)\r\n                \r\n            })\r\n            this.setState({\r\n                rows:movieRows\r\n            })\r\n        \r\n        }catch(error){\r\n            console.log(\" here: \"+error)\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 style={{paddingLeft:\"10px\",  fontFamily:\"Montserrat\"}}>Tv Search</h1>\r\n                <div>\r\n               \r\n               \r\n               <input className=\"input\"style={{\r\n                   fontSize: 24,\r\n                   display: \"block\",\r\n                   width: \"96%\",\r\n                   paddingTop: 8,\r\n                   paddingBottom: 8,\r\n                   paddingLeft: 20,\r\n                   paddingRight: 20,\r\n                   marginLeft: 10,\r\n                   marginRight: 10\r\n\r\n               }}\r\n               onChange={this.handleChange}\r\n               placeholder=\"Enter a tv show....\" />\r\n               {this.state.rows}\r\n              \r\n            </div>\r\n             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tvsearch\r\n","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Popularmovies.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\Home.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieRow.js",["97","98","99","100","101","102","103","104"],"import React, { Component } from 'react'\r\nimport NewPageforRe from \"./NewPageforRe\"\r\nimport RemovieRow from './RemovieRow'\r\n\r\nvar movieRows =[]\r\nvar movie_Res =[]\r\nvar title = []\r\nexport class MovieRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            rows: [],\r\n            r_success: false\r\n        }\r\n    }\r\n    \r\n    viewMovie=()=>{\r\n        console.log(\"in view movie--\"+this.props.movie.title)\r\n        const url = \"https://www.themoviedb.org/movie/\"+this.props.movie.id\r\n        //window.location.href = url\r\n        window.open(url, \"_blank\");\r\n    }\r\n    \r\n    viewReMovie=(id)=>{\r\n    console.log(\"movie id --\"+id)\r\n    const url = \"https://www.themoviedb.org/movie/\"+id\r\n      //window.location.href = url\r\n     // window.open( url, \"_blank\");\r\n\r\n    }\r\n\r\n    movieInfo_newWindow=()=>{\r\n\r\n            movieRows.forEach((movie)=>{\r\n            let imgSrc = movie.poster_path\r\n        \r\n            //let button = <button onClick={this.viewReMovie}>view</button>\r\n            console.log(movie.poster_path)\r\n\r\n            const info = \r\n            \"<table>\"+\r\n            \"<tbody>\"+\r\n            \"<tr>\"+\r\n        \r\n            '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n            \"<td>\"+ \"<h2>\"+movie.title+\"</h2>\" + \r\n            \"<p>\"+movie.overview+\"</p>\"+\r\n            \"</td>\" +\r\n            \r\n\r\n            \"</tr>\"+\r\n            \"</tbody>\"+\r\n            \"</table>\"+\r\n            \"<hr>\"\r\n            \r\n            title.push(info)\r\n        })\r\n    }\r\n\r\n    opennewWindow=()=>{\r\n        // var popwindow = window.open(\"\",\"Recommended Movies\", \"_blank\");\r\n        /* popwindow.postMessage({\"movieRows\":this.state.rows}, \r\n        'http://localhost:3001/recommendation');*/\r\n        \r\n          // console.log(\"MOVIE ROWS---\"+movieRows)\r\n         //  const windowInfo = movieRows.length\r\n        // var movie_c = movie_Res[0]\r\n        // const res_m =[]\r\n        // this.movieInfo_newWindow()\r\n        var popwindow = window.open(\"\", \"_blank\"); \r\n        popwindow.document.write(\"<h1>Recommendation Page</h1>\");\r\n        movieRows.forEach((movie)=>{\r\n        let imgSrc = movie.poster_path\r\n        \r\n        //let button = <button onClick={this.viewReMovie}>view</button>\r\n        console.log(movie.poster_path)\r\n        const info = \r\n        \"<table>\"+\r\n        \"<tbody>\"+\r\n        \"<tr>\"+\r\n        \r\n        '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n        \"<td>\"+ \"<h2>\"+movie.title+\"</h2>\" + \r\n        \"<p>\"+movie.overview+\"</p>\"+\r\n        \"</td>\" +\r\n            \r\n        \"</tr>\"+\r\n        \"</tbody>\"+\r\n        \"</table>\"+\r\n        \"<hr>\"\r\n        popwindow.document.write(info);\r\n\r\n        //title.push(info)\r\n        })\r\n        \r\n        //   var popwindow = window.open(\"\", \"_blank\"); \r\n        //popwindow.document.write(\"<h1>Recommendation Page</h1>\"+title);\r\n\r\n        title =[]\r\n\r\n    }\r\n    getRecommendation =async()=>{\r\n        try{\r\n        \r\n        const movie_id = this.props.movie.id\r\n        let url =`https://api.themoviedb.org/3/movie/${movie_id}/recommendations?api_key=5958134e04ed9ecbbf6100cd3a582d3d`\r\n\r\n        let response = await fetch(url)\r\n       // console.log(response)\r\n        const data = await response.json()\r\n        //console.log(data)\r\n        const results = data.results;\r\n        movie_Res = results\r\n       // console.log(results)\r\n       // var movieRows =[]\r\n            movieRows =[]\r\n            results.forEach((movie) =>\r\n            {\r\n                movie.poster_path = \"https://image.tmdb.org/t/p/w185\"+ movie.poster_path\r\n                movie.title = movie.title\r\n                movie.overview = movie.overview\r\n               // const movieRow = <RemovieRow key ={movie.id} movie={movie}/>\r\n              //  console.log(movie)\r\n                movieRows.push(movie)\r\n                \r\n            })\r\n            this.state.r_success = true\r\n            this.setState({\r\n                rows:movieRows\r\n            })\r\n            \r\n        this.opennewWindow()\r\n            movieRows= []\r\n\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n            <table key ={this.props.movie.id}>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img alt =\"poster\" src ={this.props.movie.poster_path}/>\r\n                    </td>\r\n                    <td>\r\n                        <h3> {this.props.movie.title} </h3>\r\n                        <p>{this.props.movie.overview}</p>\r\n                        <button className=\"btn\" onClick={this.viewMovie} value=\"View\"> View </button>\r\n                        <button className=\"btn\" onClick={this.getRecommendation} value=\"View\"> Get Recommendation </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieRow\r\n","C:\\Users\\ala12\\movie-search-app\\src\\pages\\RemovieRow.js",[],["105","106"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\recommendation.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\NewPageforRe.js",["107"],"import React, { Component } from 'react'\r\nvar title =[]\r\nexport class NewPageforRe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n\r\n\r\n\r\n  \r\n    showTable =()=>{\r\n        //console.log('in show table')\r\n        const movies = this.props.movie\r\n        \r\n        movies.forEach(movie => {\r\n    \r\n        \r\n        <table key ={movie.id}>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <img alt =\"poster\" src ={movie.poster_path}/>\r\n                </td>\r\n\r\n                <td>\r\n                   <h3> {movie.title} </h3>\r\n                   <p>{movie.overview}</p>\r\n                   <input type=\"button\" onClick={this.viewMovie} value=\"View\" />\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n   \r\n        });\r\n        \r\n    }\r\n    render() {\r\n        console.log(\"IN RECOM TAB\")\r\n        return (\r\n            <div>\r\n                  \r\n             \r\n                <h2>In recommendation page</h2>\r\n                {this.showTable()}\r\n                 \r\n               </div>\r\n           \r\n        )\r\n            \r\n        \r\n    }\r\n}\r\n\r\nexport default NewPageforRe\r\n",["108","109"],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\TvRow.js",["110","111","112","113","114","115","116","117","118"],"import React, { Component} from 'react';\r\nimport {useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\nimport NewPageforRe from \"./NewPageforRe\";\r\nimport RemovieRow from './RemovieRow';\r\nimport \"../App.css\";\r\n\r\nvar movieRows =[]\r\nvar movie_Res =[]\r\nvar title = []\r\n\r\nexport class TvRow extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n             rows: [],\r\n             r_success: false\r\n        }\r\n    }\r\n\r\n    \r\n    viewTv=()=>{\r\n        //onsole.log(\"in view movie--\"+this.props.tv.name)\r\n        const url = \"https://www.themoviedb.org/tv/\"+this.props.tv.id\r\n        //window.location.href = url\r\n        window.open( url, \"_blank\");\r\n    }\r\n\r\n    movieInfo_newWindow=()=>{\r\n            movieRows.forEach((tv)=>{\r\n            let imgSrc = tv.poster_path\r\n            const info = \r\n            \"<table>\"+\r\n            \"<tbody>\"+\r\n            \"<tr>\"+\r\n            '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n            \"<td>\"+ \"<h2>\"+tv.name+\"</h2>\" + \r\n            \"<p>\"+tv.overview+\"</p>\"+\r\n            \"</td>\" +\r\n            \r\n\r\n             \"</tr>\"+\r\n             \"</tbody>\"+\r\n             \"</table>\"+\r\n              \"<hr>\"\r\n             \r\n            \r\n            title.push(info)\r\n         })\r\n\r\n    }\r\n   \r\n    opennewWindow=()=>{\r\n        \r\n       \r\n       \r\n       \r\n       // var popwindow = window.open(\"\",\"Recommended Movies\", \"_blank\");\r\n       /* popwindow.postMessage({\"movieRows\":this.state.rows}, \r\n           'http://localhost:3001/recommendation');*/\r\n         \r\n         \r\n          // console.log(\"MOVIE ROWS---\"+movieRows)\r\n         //  const windowInfo = movieRows.length\r\n\r\n          // var movie_c = movie_Res[0]\r\n          \r\n           // const res_m =[]\r\n\r\n\r\n           \r\n           //this.movieInfo_newWindow()\r\n           \r\n           var popwindow = window.open(\"\", \"_blank\"); \r\n           popwindow.document.write( '<h1 className=recom-title>Recommendation Page</h1>')\r\n           movieRows.forEach((tv)=>{\r\n           \r\n           \r\n            let imgSrc = tv.poster_path\r\n           \r\n           \r\n\r\n            const info = \r\n            \"<table>\"+\r\n            \"<tbody>\"+\r\n            \"<tr>\"+\r\n          \r\n            '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n            \"<td>\"+ \"<h2>\"+tv.name+\"</h2>\" + \r\n             \"<p>\"+tv.overview+\"</p>\"+\r\n             \"</td>\" +\r\n            \r\n\r\n             \"</tr>\"+\r\n             \"</tbody>\"+\r\n             \"</table>\"+\r\n              \"<hr>\"\r\n             \r\n              popwindow.document.write(info);\r\n           // title.push(info)\r\n         })\r\n         //  popwindow.document.write('<h1 className=recom-title>Recommendation Page</h1>'+title);\r\n\r\n           title =[]\r\n          \r\n\r\n    }\r\n\r\n       getRecommendation =async()=>{\r\n           \r\n        try{\r\n        \r\n        const tv_id = this.props.tv.id\r\n        let url =`https://api.themoviedb.org/3/tv/${tv_id}/recommendations?api_key=5958134e04ed9ecbbf6100cd3a582d3d`\r\n\r\n        let response = await fetch(url)\r\n        const data = await response.json()\r\n        \r\n        const results = data.results;\r\n        movie_Res = results\r\n        //console.log(results)\r\n    \r\n             \r\n             movieRows =[]\r\n            results.forEach((tv) =>\r\n            {\r\n                \r\n                tv.poster_path = \"https://image.tmdb.org/t/p/w185\"+ tv.poster_path\r\n                tv.name = tv.name\r\n                tv.overview = tv.overview\r\n               // const movieRow = <RemovieRow key ={movie.id} movie={movie}/>\r\n                   \r\n              //  console.log(movie)\r\n               \r\n                movieRows.push(tv)\r\n                \r\n            })\r\n\r\n            this.state.r_success = true\r\n            this.setState({\r\n                rows:movieRows\r\n            })\r\n             \r\n            \r\n           this.opennewWindow()\r\n            \r\n\r\n           movieRows= []\r\n            \r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        //console.log(this.props)\r\n        return (\r\n            <div>\r\n                 <table key ={this.props.tv.id}>\r\n             <tbody>\r\n                 <tr>\r\n                     <td>\r\n                         <img alt =\"poster\" src ={this.props.tv.poster_path}/>\r\n                     </td>\r\n \r\n                    <td>\r\n                        <h3> {this.props.tv.name} </h3>\r\n                        <p>{this.props.tv.overview}</p>\r\n\r\n                        <button className=\"btn\" onClick={this.viewTv} value=\"View\"> View </button>\r\n                        <button className=\"btn\" onClick={this.getRecommendation} value=\"View\"> Get Recommendation </button>\r\n\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TvRow\r\n","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watchlist.js",["119"],"C:\\Users\\ala12\\movie-search-app\\src\\context\\AppReducer.js",["120"],"export default (state, action) => {\r\n    switch(action.type){\r\n        case \"ADD_MOVIE_TO_WATCHLIST\":\r\n        return {\r\n            ...state,\r\n            watchlist:[action.payload, ...state.watchlist],\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","C:\\Users\\ala12\\movie-search-app\\src\\pages\\Watched.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\TvRows.js",["121","122","123","124","125","126","127","128"],"C:\\Users\\ala12\\movie-search-app\\src\\context\\GlobalState.js",[],"C:\\Users\\ala12\\movie-search-app\\src\\pages\\MovieRows.js",["129","130","131","132","133","134","135"],"import React, {useContext } from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nvar movieRows =[]\r\nvar movie_Res =[]\r\nvar title = []\r\nfunction MovieRows(props) {\r\n\r\n    const {\r\n        addMovieToWatchlist, \r\n        watchlist,\r\n      } = useContext(GlobalContext);\r\n\r\n    const viewMovie=()=>{\r\n        console.log(\"in view movie--\"+props.movie.title)\r\n        const url = \"https://www.themoviedb.org/movie/\"+props.movie.id\r\n        window.open(url, \"_blank\");\r\n    }\r\n    \r\n    \r\n\r\n  const  movieInfo_newWindow=()=>{\r\n\r\n            movieRows.forEach((movie)=>{\r\n            let imgSrc = movie.poster_path\r\n        \r\n          \r\n          //  console.log(movie.poster_path)\r\n\r\n            const info = \r\n            \"<table>\"+\r\n            \"<tbody>\"+\r\n            \"<tr>\"+\r\n        \r\n            '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n            \"<td>\"+ \"<h2>\"+movie.title+\"</h2>\" + \r\n            \"<p>\"+movie.overview+\"</p>\"+\r\n            \"</td>\" +\r\n            \r\n\r\n            \"</tr>\"+\r\n            \"</tbody>\"+\r\n            \"</table>\"+\r\n            \"<hr>\"\r\n            \r\n            title.push(info)\r\n        })\r\n    }\r\n\r\n  const  opennewWindow=()=>{\r\n    \r\n        var popwindow = window.open(\"\", \"_blank\"); \r\n        popwindow.document.write(\"<h1>Recommendation Page</h1>\");\r\n        movieRows.forEach((movie)=>{\r\n        let imgSrc = movie.poster_path\r\n        \r\n        //let button = <button onClick={this.viewReMovie}>view</button>\r\n        console.log(movie.poster_path)\r\n        const info = \r\n        \"<table>\"+\r\n        \"<tbody>\"+\r\n        \"<tr>\"+\r\n        \r\n        '<td><text><img src=\"' + imgSrc + '\"></text></td>'+ \r\n\r\n        \"<td>\"+ \"<h2>\"+movie.title+\"</h2>\" + \r\n        \"<p>\"+movie.overview+\"</p>\"+\r\n        \"</td>\" +\r\n            \r\n        \"</tr>\"+\r\n        \"</tbody>\"+\r\n        \"</table>\"+\r\n        \"<hr>\"\r\n        popwindow.document.write(info);\r\n\r\n      \r\n        })\r\n        \r\n       \r\n        title =[]\r\n\r\n    }\r\n   const getRecommendation =async()=>{\r\n        try{\r\n        \r\n        const movie_id = props.movie.id\r\n        let url =`https://api.themoviedb.org/3/movie/${movie_id}/recommendations?api_key=5958134e04ed9ecbbf6100cd3a582d3d`\r\n\r\n        let response = await fetch(url)\r\n       // console.log(response)\r\n        const data = await response.json()\r\n        //console.log(data)\r\n        const results = data.results;\r\n        movie_Res = results\r\n       // console.log(results)\r\n       // var movieRows =[]\r\n            movieRows =[]\r\n            results.forEach((movie) =>\r\n            {\r\n                movie.poster_path = \"https://image.tmdb.org/t/p/w185\"+ movie.poster_path\r\n                movie.title = movie.title\r\n                movie.overview = movie.overview\r\n             \r\n                movieRows.push(movie)\r\n                \r\n            })\r\n          \r\n            \r\n        opennewWindow()\r\n            movieRows= []\r\n\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n             <table key ={props.movie.id}>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <img alt =\"poster\" src ={props.movie.poster_path}/>\r\n                    </td>\r\n                    <td>\r\n                        <h3> {props.movie.title} </h3>\r\n                        <p>{props.movie.overview}</p>\r\n                        <button className=\"btn\" onClick={viewMovie} value=\"View\"> View </button>\r\n                        <button className=\"btn\" onClick={getRecommendation} value=\"View\"> Get Recommendation </button>\r\n                        <button className=\"btn\"\r\n                         // disabled={watchlistDisabled}\r\n                         onClick={()=>addMovieToWatchlist(props)}> Add To Watchlist </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieRows\r\n",{"ruleId":null,"fatal":true,"severity":2,"message":"136","line":42,"column":5},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"145","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"146","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":13},{"ruleId":"141","severity":1,"message":"147","line":2,"column":8,"nodeType":"143","messageId":"144","endLine":2,"endColumn":20},{"ruleId":"141","severity":1,"message":"148","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":18},{"ruleId":"141","severity":1,"message":"149","line":27,"column":11,"nodeType":"143","messageId":"144","endLine":27,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":48,"column":19,"nodeType":"152","messageId":"153","endLine":48,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":86,"column":15,"nodeType":"152","messageId":"153","endLine":86,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":116,"column":9,"nodeType":"143","messageId":"144","endLine":116,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":123,"column":31,"nodeType":"157","messageId":"158","endLine":123,"endColumn":42},{"ruleId":"155","severity":1,"message":"159","line":124,"column":34,"nodeType":"157","messageId":"158","endLine":124,"endColumn":48},{"ruleId":"137","replacedBy":"160"},{"ruleId":"139","replacedBy":"161"},{"ruleId":"141","severity":1,"message":"162","line":2,"column":5,"nodeType":"143","messageId":"144","endLine":2,"endColumn":10},{"ruleId":"137","replacedBy":"163"},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","severity":1,"message":"165","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"166","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":22},{"ruleId":"141","severity":1,"message":"147","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":20},{"ruleId":"141","severity":1,"message":"148","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":40,"column":19,"nodeType":"152","messageId":"153","endLine":40,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":93,"column":19,"nodeType":"152","messageId":"153","endLine":93,"endColumn":20},{"ruleId":"141","severity":1,"message":"154","line":124,"column":9,"nodeType":"143","messageId":"144","endLine":124,"endColumn":18},{"ruleId":"155","severity":1,"message":"167","line":133,"column":27,"nodeType":"157","messageId":"158","endLine":133,"endColumn":34},{"ruleId":"155","severity":1,"message":"168","line":134,"column":31,"nodeType":"157","messageId":"158","endLine":134,"endColumn":42},{"ruleId":"169","severity":1,"message":"170","line":10,"column":5,"nodeType":"171","messageId":"172","endLine":12,"endColumn":9},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":12,"endColumn":3},{"ruleId":"141","severity":1,"message":"165","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"166","line":2,"column":9,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"176","line":17,"column":11,"nodeType":"143","messageId":"144","endLine":17,"endColumn":30},{"ruleId":"150","severity":1,"message":"151","line":26,"column":15,"nodeType":"152","messageId":"153","endLine":26,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":61,"column":15,"nodeType":"152","messageId":"153","endLine":61,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":92,"column":5,"nodeType":"143","messageId":"144","endLine":92,"endColumn":14},{"ruleId":"155","severity":1,"message":"167","line":101,"column":23,"nodeType":"157","messageId":"158","endLine":101,"endColumn":30},{"ruleId":"155","severity":1,"message":"168","line":102,"column":27,"nodeType":"157","messageId":"158","endLine":102,"endColumn":38},{"ruleId":"141","severity":1,"message":"177","line":11,"column":9,"nodeType":"143","messageId":"144","endLine":11,"endColumn":18},{"ruleId":"141","severity":1,"message":"176","line":22,"column":10,"nodeType":"143","messageId":"144","endLine":22,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":37,"column":19,"nodeType":"152","messageId":"153","endLine":37,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":67,"column":15,"nodeType":"152","messageId":"153","endLine":67,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":95,"column":9,"nodeType":"143","messageId":"144","endLine":95,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":102,"column":31,"nodeType":"157","messageId":"158","endLine":102,"endColumn":42},{"ruleId":"155","severity":1,"message":"159","line":103,"column":34,"nodeType":"157","messageId":"158","endLine":103,"endColumn":48},"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n\n  40 |     </Layout>\n  41 |     </div>\n> 42 |     </GlobalProvider>\n     |     ^\n  43 | \n  44 |   );\n  45 | }","no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Watched' is defined but never used.","Identifier","unusedVar","'MovieRow' is defined but never used.","'TvRow' is defined but never used.","'NewPageforRe' is defined but never used.","'RemovieRow' is defined but never used.","'url' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'movie_Res' is assigned a value but never used.","no-self-assign","'movie.title' is assigned to itself.","MemberExpression","selfAssignment","'movie.overview' is assigned to itself.",["178"],["179"],"'title' is assigned a value but never used.",["178"],["179"],"'useContext' is defined but never used.","'GlobalContext' is defined but never used.","'tv.name' is assigned to itself.","'tv.overview' is assigned to itself.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'movieInfo_newWindow' is assigned a value but never used.","'watchlist' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]